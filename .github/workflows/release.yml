name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: kkape-gearbox
          
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: kkape-gearbox.exe
          
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: kkape-gearbox
          
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: kkape-gearbox
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Get version from tag
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
        else
          VERSION=${GITHUB_REF#refs/tags/v}
        fi
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install pnpm
      run: npm install -g pnpm
    
    - name: Setup Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install dependencies
      run: pnpm install
    
    - name: Generate icons
      run: pnpm generate:icons
    
    - name: Build frontend
      run: pnpm --filter shell build
    
    - name: Build Tauri app
      run: |
        cd apps/shell
        cargo tauri build --target ${{ matrix.target }}
    
    - name: Generate changelog
      id: changelog
      run: |
        if [ -f CHANGELOG.md ]; then
          CHANGELOG=$(awk "/## \[${{ steps.get_version.outputs.version }}\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md || echo "Release version ${{ steps.get_version.outputs.version }}")
        else
          CHANGELOG="Release version ${{ steps.get_version.outputs.version }}"
        fi
        echo "$CHANGELOG" > changelog.txt
    
    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        name: KKAPE Gearbox v${{ steps.get_version.outputs.version }}
        body_path: changelog.txt
        draft: false
        prerelease: ${{ contains(steps.get_version.outputs.version, 'beta') || contains(steps.get_version.outputs.version, 'alpha') || contains(steps.get_version.outputs.version, 'rc') }}
        files: |
          apps/shell/src-tauri/target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          apps/shell/src-tauri/target/${{ matrix.target }}/release/bundle/**/*
